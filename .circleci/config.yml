version: 2

job_defaults: &job_defaults
  machine: true
  working_directory: ~/gravnic-level-creator
  environment:
    ENVIRONMENT: ci
    TERM: xterm-color

install_docker_compose: &install_docker_compose
  name: Install docker compose
  user: root
  command: |
    curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
    chmod +x ~/docker-compose
    sudo mv ~/docker-compose /usr/local/bin/docker-compose

install_node: &install_node
  name: Install Node
  user: root
  command: |
    set +e             
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
    export NVM_DIR="/opt/circleci/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm install v9.11.1
    nvm alias default v9.11.1
    
    # Each step uses the same `$BASH_ENV`, so need to modify it
    echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
    echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

install_yarn: &install_yarn
  name: Install yarn
  command: npm install --global yarn

jobs:
  build_and_test_frontend:
    <<: *job_defaults
    steps:
      - checkout
      - run:
          <<: *install_node
      - run:
          <<: *install_yarn
      - restore_cache:
          keys:
            - gravnic-frontend-v4-{{ checksum "frontend/yarn.lock" }}
            - gravnic-frontend-v4-
      - run:
          name: Install dependancies
          command: cd frontend && yarn
      - save_cache:
          key: gravnic-frontend-v4-{{ checksum "frontend/yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run linter
          command: cd frontend && yarn lint
      - run:
          name: Run tests
          command: cd frontend && yarn test
      - run:
          name: Build frontend
          command: cd frontend && yarn build
      - persist_to_workspace:
          root: ~/gravnic-level-creator
          paths:
            - frontend

  build_and_test_backend:
    <<: *job_defaults
    steps:
      - checkout
      - run:
          <<: *install_node
      - run:
          <<: *install_yarn
      - restore_cache:
          keys:
            - gravnic-backend-v4-{{ checksum "backend/yarn.lock" }}
            - gravnic-backend-v4-
      - run:
          name: Install dependancies
          command: cd backend && yarn
      - save_cache:
          key: gravnic-backend-v4-{{ checksum "backend/yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run linter
          command: cd backend && yarn lint
      - run:
          name: Install MongoDB
          command: |
            sudo apt-get update
            sudo apt-get install mongodb-server
      - run:
          name: Run tests
          command: cd backend && yarn test --forceExit
      - persist_to_workspace:
          root: ~/gravnic-level-creator
          paths:
            - backend

  build_and_test_level_solver:
    <<: *job_defaults
    steps:
      - checkout
      - run:
          <<: *install_node
      - run:
          <<: *install_yarn
      - restore_cache:
          keys:
            - gravnic-levelSolver-v4-{{ checksum "levelSolver/yarn.lock" }}
            - gravnic-levelSolver-v4-
      - run:
          name: Install dependancies
          command: cd levelSolver && yarn
      - save_cache:
          key: gravnic-levelSolver-v4-{{ checksum "levelSolver/yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run linter
          command: cd levelSolver && yarn lint
      - run:
          name: Install MongoDB
          command: |
            sudo apt-get update
            sudo apt-get install mongodb-server
      - run:
          name: Run tests
          command: cd levelSolver && yarn test --forceExit
      - persist_to_workspace:
          root: ~/gravnic-level-creator
          paths:
            - levelSolver

  e2e_tests:
    <<: *job_defaults
    steps:
      - checkout
      - run:
          <<: *install_docker_compose
      - attach_workspace:
          at: ~/gravnic-level-creator
      - run:
          name: End to end tests
          command: docker-compose run e2e

  deploy: 
    <<: *job_defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/gravnic-level-creator
      - run:
          name: Deploy containers to Heroku
          command: |
            docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            docker build --rm=false -t registry.heroku.com/$HEROKU_FRONTEND_APP_NAME/web frontend/
            docker push registry.heroku.com/$HEROKU_FRONTEND_APP_NAME/web:latest
            docker build --rm=false -t registry.heroku.com/$HEROKU_BACKEND_APP_NAME/web backend/
            docker push registry.heroku.com/$HEROKU_BACKEND_APP_NAME/web:latest
            docker build --rm=false -t registry.heroku.com/$HEROKU_LEVEL_SOLVER_APP_NAME/web levelSolver/
            docker push registry.heroku.com/$HEROKU_LEVEL_SOLVER_APP_NAME/web:latest

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test_frontend
      - build_and_test_backend
      - build_and_test_level_solver
      - e2e_tests:
          requires:
            - build_and_test_frontend
            - build_and_test_backend
            - build_and_test_level_solver
      - deploy:
          requires:
            - e2e_tests
          filters:
            branches:
              only: master
